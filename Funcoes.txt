// Criar banco de Dados Menu-> Estrutura
create table crt_menu (
nome varchar(50) primary key,
descricao varchar(150),
nivel int(1)
);

//
CREATE TABLE ctrl_usuario (
nome VARCHAR(20) PRIMARY KEY,
senha VARCHAR(20),
nivel integer
);
///


procedure TForm1.incluiDB(cNOME, cDESCRICAO: string; nNIVEL, nINDICE: integer);
var
  qrTMP : TZQuery;
begin
  // Faz a inclus√£o/atualizacao dos itens do menu na base.
  // Se o nome existir, atualiza a descricao
  qrTMP := TZQuery.Create(self);
  qrTMP.Connection:=conexao;
  qrTMP.sql.Add('INSERT INTO crt_menu (nome, descricao, nivel, indice)');
  qrTMP.sql.Add('VALUES(:cNOME, :cDESCRICAO, :nNIVEL, :nINDICE ) ON');
  qrTMP.sql.Add('DUPLICATE KEY UPDATE descricao = :cDESCRICAO, indice = :nINDICE');
  qrTMP.ParamByName('cNOME').AsString      := cNOME ;
  qrTMP.ParamByName('cDESCRICAO').AsString := cDESCRICAO ;
  qrTMP.ParamByName('nNIVEL').AsInteger    := nNIVEL ;
  qrTMP.ParamByName('nINDICE').AsInteger   := nINDICE ;
  try
  qrTMP.ExecSQL;
  except
    on e: Exception do
       begin
          ShowMessage('Erro L90 '+#13+e.Message+#13+e.ClassName);
       end;
  end;
  FreeAndNil(qrTMP);
end;



procedure TForm1.protegemenu(nNIVEL: integer);
// Carrega o menu inteiro, durante o carregamento
// verifica o nivel do usuario, se o nivel do usuario
// for menor ou igual ao permitido na base de menu, ele exibe ou nao
var
  nITEM, nPRINCIPAL : integer;
begin
  for nPRINCIPAL := 0 to MainMenu1.Items.Count-1 do
    begin
      if nNIVEL <= RetornaNIVEL(MainMenu1.Items[nPRINCIPAL].Name) then
         MainMenu1.Items[nPRINCIPAL].Enabled :=true
      else
         MainMenu1.Items[nPRINCIPAL].Enabled :=false;
      for nITEM := 0 to MainMenu1.Items[nPRINCIPAL].Count-1 do
        begin
           if nNIVEL <= RetornaNIVEL(MainMenu1.Items[nPRINCIPAL].Items[nITEM].Name) then
              MainMenu1.Items[nPRINCIPAL].Items[nITEM].Enabled:=true
           else
              MainMenu1.Items[nPRINCIPAL].Items[nITEM].Enabled:=false;
        end;
    end;

end;

function TForm1.RetornaNIVEL(cNOME:string):integer;
// realiza a pesquisa de nivel, se encontrar o nome
// retorna o nivel cadastrado.
var
qrTMP : TZQuery;
nNIVEL : integer;
begin
  qrTMP := TZQuery.Create(self);
  qrTMP.Connection := conexao;
  qrTMP.sql.Add('select * from crt_menu where nome = :cNOME');
  qrTMP.ParamByName('cNOME').AsString:=cNOME;
  qrTMP.Open;
  if qrTMP.RecordCount > 0 then
     nNIVEL := qrTMP.FieldByName('NIVEL').Value
  else
     nNIVEL := 1;
  FreeAndNil(qrTMP);
  result := nNIVEL;
end;

procedure TForm1.CriaDBmenu;
var
  nITEM, nPRINCIPAL, nIndice : Integer;
begin
  nIndice := 0;
  for nPRINCIPAL := 0 to MainMenu1.Items.Count-1 do
    begin
      incluiDB(MainMenu1.Items[nPRINCIPAL].Name,
                 MainMenu1.Items[nPRINCIPAL].Caption,
                 1,
                 nIndice);
      nIndice:= nIndice+1;
      for nITEM := 0 to MainMenu1.Items[nPRINCIPAL].Count-1 do
        begin
        incluiDB(MainMenu1.Items[nPRINCIPAL].Items[nITEM].Name,
                   '   --'+MainMenu1.Items[nPRINCIPAL].Items[nITEM].Caption,
                   1,
                   nIndice);
        nIndice:= nIndice+1;
        end;
    end;
end;






procedure TForm1.Button2Click(Sender: TObject);
begin
  protegemenu(strtoint(Edit1.text));
end;


